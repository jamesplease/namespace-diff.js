{"version":3,"sources":["namespace-diff.js"],"names":[],"mappings":"AAAA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,SAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,EAAE,GACzF,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAC5D,MAAM,CAAC,aAAa,GAAG,OAAO,EAAE,CAAA;CACjC,CAAA,CAAC,IAAI,EAAE,YAAY;AAAE,cAAY,CAAC;;AAEjC,WAAS,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE;AACzC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,eAAS,CAAC,CAAC,CAAC,GAAI,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,AAAC,CAAC;AACtC,UAAI,CAAC,KAAK,SAAS,CAAC,MAAM,EAAE;AAC1B,YAAI,IAAI,GAAG,CAAC;OACb;KACF;AACD,WAAO,SAAS,CAAC;GAClB;;AAED,WAAS,aAAa,CAAC,KAAK,EAAE,GAAG,EAAa;QAAX,GAAG,gCAAG,GAAG;AAC1C,QAAI,KAAK,KAAK,GAAG,EAAE;AACjB,aAAO,EAAE,SAAS,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;KACxC;;;AAGD,QAAI,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACnC,QAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC/B,QAAI,IAAI,GAAG,EAAE,CAAC;AACd,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,UAAI,WAAW,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE;AACnC,cAAM;OACP,MAAM;AACL,YAAI,IAAI,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;OAC9B;KACF;;AAED,QAAI,SAAS,GAAG,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AAC7D,QAAI,QAAQ,GAAG,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;;;AAG1D,WAAO;AACL,eAAS,EAAE,SAAS,CAAC,OAAO,EAAE;AAC9B,cAAQ,EAAE,QAAQ;KACnB,CAAC;GACH;;AAED,MAAI,cAAc,GAAG,aAAa,CAAC;;AAEnC,SAAO,cAAc,CAAC;CAEvB,CAAC,CAAE","file":"namespace-diff.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.namespaceDiff = factory()\n}(this, function () { 'use strict';\n\n  function buildOutput(outStates, base, sep) {\n    for (var j = 0; j < outStates.length; j++) {\n      outStates[j] = (base += outStates[j]);\n      if (j !== outStates.length) {\n        base += sep;\n      }\n    }\n    return outStates;\n  }\n\n  function namespaceDiff(start, end, sep = '.') {\n    if (start === end) {\n      return { outStates: [], inStates: [] };\n    }\n\n    // Determine the state up to which they are the same\n    var startStates = start.split(sep);\n    var endStates = end.split(sep);\n    var base = '';\n    for (var i = 0; i < startStates.length; i++) {\n      if (startStates[i] !== endStates[i]) {\n        break;\n      } else {\n        base += startStates[i] + sep;\n      }\n    }\n\n    var outStates = buildOutput(startStates.slice(i), base, sep);\n    var inStates = buildOutput(endStates.slice(i), base, sep);\n\n    // Use that information to generate the result\n    return {\n      outStates: outStates.reverse(),\n      inStates: inStates\n    };\n  }\n\n  var namespace_diff = namespaceDiff;\n\n  return namespace_diff;\n\n}));\n"],"sourceRoot":"/source/"}